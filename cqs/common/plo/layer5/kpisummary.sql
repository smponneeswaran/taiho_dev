/*
kpisummary

Notes : PLO to compute the current metrics and previous 30 days metrics to enable the study dashboard 

*/

CREATE TABLE kpisummary as
WITH portfolio_metrics_current AS 
                        ( SELECT  f.studyid,  f.siteid,  
                            coalesce((coalesce(s.studycompletiondate, current_date) - s.studystartdate), 0) AS current_studydays,
                            sum(coalesce(sitedays, 0)) AS current_sitedays,
                            sum(coalesce(protocoldeviations, 0)) AS current_protocoldeviations,
                            sum(coalesce(subjectdays, 0)) AS current_subjectdays,
                            sum(coalesce(adverseevents, 0)) AS current_adverseevents,
                            sum(coalesce(subjectsenrolled, 0)) AS current_subjectsenrolled,
                            sum(coalesce(consented, 0)) AS current_consented,
                            sum(coalesce(consentfailures, 0)) AS current_consentfailures,
                            sum(coalesce(screened, 0)) AS current_screened,
                            sum(coalesce(screenfailures, 0)) AS current_screenfailures,
                            sum(coalesce(randomized, 0)) AS current_randomized,
                            sum(coalesce(randomizationfailures, 0)) AS current_randomizationfailures,
                            sum(coalesce(withdrawn, 0)) AS current_withdrawn,
                            sum(coalesce(evaluable, 0)) AS current_evaluable,
                            sum(coalesce(evaluablefailures, 0)) AS current_evaluablefailures,
                            (sum(coalesce(f.queryopenedcount, 0)) -  sum(coalesce(f.querycancelledcount, 0)) - sum(coalesce(f.queryclosedcount, 0))) AS current_openqueries,
                            coalesce(sc.subjectcount, 0) AS current_subjectcount,
                            sum(coalesce(f.siteissueresolutiondays, 0)) AS current_siteissueresolutiondays,
                            sum(coalesce(f.closedissues, 0)) AS current_closedissues,
                            sum(coalesce(f.expectedrequiredfields, 0)) AS current_expectedrequiredfields,
                            sum(coalesce(f.populatedrequiredfields, 0)) AS current_populatedrequiredfields,
                            sum(coalesce(f.expectedrequiredprimaryendpointfields, 0)) AS current_expectedprimaryendpointfields,
                            sum(coalesce(f.primaryendpointpopulatedrequiredfields, 0)) AS current_populatedprimaryendpointfields,
                            sum(coalesce(f.expectedrequiredsdvfields, 0)) AS current_expectedrequiredsdvfields,
                            sum(coalesce(f.sdvpopulatedrequiredfields, 0)) AS current_populatedsdvrequiredfields,
                            sum(coalesce(f.formdatacollecteddays, 0)) AS current_formdatacollecteddays,
                            sum(coalesce(f.primaryendpointformdatacollecteddays, 0)) AS current_primaryendpointformdatacollecteddays,
                            sum(coalesce(f.collectedformscount, 0)) AS current_collectedformscounts,
                            sum(coalesce(f.primaryendpointcollectedforms, 0)) AS current_primaryendpointcollectedforms,
                            sum(coalesce(f.queryopenedcount, 0)) AS current_querycount,
                            (sum(coalesce(f.queryopenedcount, 0)) -  sum(coalesce(f.querycancelledcount, 0)) - sum(coalesce(f.queryclosedcount, 0))) AS current_queryopencount,
                            sum(coalesce(f.subjectvisits, 0)) AS current_subjectvisits,
                            sum(coalesce(f.subjectvisitsonschedule, 0)) AS current_subjectvisitsonschedule,
                            sum(coalesce(f.queryresolutiondays, 0)) AS current_queryresolutiondays,
                            sum(coalesce(f.plannedtrialvisits, 0)) AS current_plannedtrialvisits,
                            sum(coalesce(f.missedtrialvisits, 0)) AS current_missedtrialvisits,
                            sum(coalesce(f.latetrialvisits, 0)) AS current_latetrialvisits,
                            sum(coalesce(f.query_oldest_age_count, 0)) AS current_openagedqueries
                            FROM factportfoliodaily f 
                            LEFT JOIN (SELECT  studyid, siteid, count(distinct comprehendid) AS subjectcount 
                                        FROM rpt_subject_disposition 
                                        GROUP BY studyid, siteid) sc ON f.studyid = sc.studyid AND f.siteid = sc.siteid
                            LEFT JOIN study s ON (f.studyid = s.studyid)
                            GROUP BY f.studyid, f.siteid, coalesce(sc.subjectcount, 0), s.studystartdate, s.studycompletiondate ),

     portfolio_metrics_prev30days AS -- CTE to calculate metrics for previous 30 days
                        ( SELECT  f.studyid, f.siteid,  
                            -- if the studycompletiondate is >= 30 days ago then the diff between studycompletiondate and studystartdate, otherwise the diff between 30 days ago and studystartdate
                            coalesce((CASE WHEN s.studycompletiondate <= (current_date - 30) THEN s.studycompletiondate ELSE (current_date - 30) END - s.studystartdate), 0)  AS previous_studydays,
                            sum(coalesce(sitedays, 0)) AS previous_sitedays,
                            sum(coalesce(protocoldeviations, 0)) AS previous_protocoldeviations,
                            sum(coalesce(subjectdays, 0)) AS previous_subjectdays,
                            sum(coalesce(adverseevents, 0)) AS previous_adverseevents,
                            sum(coalesce(subjectsenrolled, 0)) AS previous_subjectsenrolled,
                            sum(coalesce(consented, 0)) AS previous_consented,
                            sum(coalesce(consentfailures, 0)) AS previous_consentfailures,
                            sum(coalesce(screened, 0)) AS previous_screened,
                            sum(coalesce(screenfailures, 0)) AS previous_screenfailures,
                            sum(coalesce(randomized, 0)) AS previous_randomized,
                            sum(coalesce(randomizationfailures, 0)) AS previous_randomizationfailures,
                            sum(coalesce(withdrawn, 0)) AS previous_withdrawn,
                            sum(coalesce(evaluable, 0)) AS previous_evaluable,
                            sum(coalesce(evaluablefailures, 0)) AS previous_evaluablefailures,
                            (sum(coalesce(f.queryopenedcount, 0)) -  sum(coalesce(f.querycancelledcount, 0)) - sum(coalesce(f.queryclosedcount, 0))) AS previous_openqueries,
                            coalesce(sc.subjectcount, 0) AS previous_subjectcount,
                            sum(coalesce(f.siteissueresolutiondays, 0)) AS previous_siteissueresolutiondays,
                            sum(coalesce(f.closedissues, 0)) AS previous_closedissues,
                            sum(coalesce(f.expectedrequiredfields, 0)) AS previous_expectedrequiredfields,
                            sum(coalesce(f.populatedrequiredfields, 0)) AS previous_populatedrequiredfields,
                            sum(coalesce(f.expectedrequiredprimaryendpointfields, 0)) AS previous_expectedprimaryendpointfields,
                            sum(coalesce(f.primaryendpointpopulatedrequiredfields, 0)) AS previous_populatedprimaryendpointfields,
                            sum(coalesce(f.expectedrequiredsdvfields, 0)) AS previous_expectedrequiredsdvfields,
                            sum(coalesce(f.sdvpopulatedrequiredfields, 0)) AS previous_populatedsdvrequiredfields,
                            sum(coalesce(f.formdatacollecteddays, 0)) AS previous_formdatacollecteddays,
                            sum(coalesce(f.primaryendpointformdatacollecteddays, 0)) AS previous_primaryendpointformdatacollecteddays,
                            sum(coalesce(f.collectedformscount, 0)) AS previous_collectedformscounts,
                            sum(coalesce(f.primaryendpointcollectedforms, 0)) AS previous_primaryendpointcollectedforms,
                            sum(coalesce(f.queryopenedcount, 0)) AS previous_querycount,
                            (sum(coalesce(f.queryopenedcount, 0)) -  sum(coalesce(f.querycancelledcount, 0)) - sum(coalesce(f.queryclosedcount, 0))) AS previous_queryopencount,
                            sum(coalesce(f.subjectvisits, 0)) AS previous_subjectvisits,
                            sum(coalesce(f.subjectvisitsonschedule, 0)) AS previous_subjectvisitsonschedule,
                            sum(coalesce(f.queryresolutiondays, 0)) AS previous_queryresolutiondays,
                            sum(coalesce(f.plannedtrialvisits, 0)) AS previous_plannedtrialvisits,
                            sum(coalesce(f.missedtrialvisits, 0)) AS previous_missedtrialvisits,
                            sum(coalesce(f.latetrialvisits, 0)) AS previous_latetrialvisits,
                            sum(coalesce(f.query_oldest_age_count, 0)) AS previous_openagedqueries
                        FROM factportfoliodaily f 
                        JOIN dimdate ON f.date_dim_id = dimdate.date_dim_id
                        LEFT JOIN (SELECT  studyid, siteid, count(distinct comprehendid) AS subjectcount
                                   FROM rpt_subject_disposition ds
                                   WHERE current_date - ds.dsstdtc >= 30 -- including 30th day as well for calculation and this has been confirmed with product
                                   GROUP BY studyid, siteid) sc ON f.studyid = sc.studyid AND f.siteid = sc.siteid
                        LEFT JOIN study s ON (f.studyid = s.studyid)
                        WHERE current_date -  dimdate.date_actual >= 30 -- including 30th day as well for calculation and this has been confirmed with product
                        GROUP BY f.studyid, f.siteid, coalesce(sc.subjectcount, 0), s.studystartdate, s.studycompletiondate)

SELECT  cur.studyid::text AS studyid,
        cur.siteid::text AS siteid, 
        cur.current_studydays::bigint AS current_studydays, 
        cur.current_sitedays::bigint AS current_sitedays, 
        cur.current_protocoldeviations::bigint AS current_protocoldeviations,
        cur.current_subjectdays::bigint AS current_subjectdays, 
        cur.current_adverseevents::bigint AS current_adverseevents, 
        cur.current_subjectsenrolled::bigint AS current_subjectsenrolled,
        cur.current_consented::bigint AS current_consented, 
        cur.current_consentfailures::bigint AS current_consentfailures, 
        cur.current_screened::bigint AS current_screened, 
        cur.current_screenfailures::bigint AS current_screenfailures,
        cur.current_randomized::bigint AS current_randomized, 
        cur.current_randomizationfailures::bigint AS current_randomizationfailures, 
        cur.current_withdrawn::bigint AS current_withdrawn, 
        cur.current_evaluable::bigint AS current_evaluable, 
        cur.current_evaluablefailures::bigint AS current_evaluablefailures, 
        cur.current_openqueries::bigint AS current_openqueries,
        prev.previous_studydays::bigint AS previous_studydays, 
        prev.previous_sitedays::bigint AS previous_sitedays, 
        prev.previous_protocoldeviations::bigint AS previous_protocoldeviations,
        prev.previous_subjectdays::bigint AS previous_subjectdays, 
        prev.previous_adverseevents::bigint AS previous_adverseevents, 
        prev.previous_subjectsenrolled::bigint AS previous_subjectsenrolled,
        prev.previous_consented::bigint AS previous_consented, 
        prev.previous_consentfailures::bigint AS previous_consentfailures, 
        prev.previous_screened::bigint AS previous_screened, 
        prev.previous_screenfailures::bigint AS previous_screenfailures,
        prev.previous_randomized::bigint AS previous_randomized, 
        prev.previous_randomizationfailures::bigint AS previous_randomizationfailures, 
        prev.previous_withdrawn::bigint AS previous_withdrawn, 
        prev.previous_evaluable::bigint AS previous_evaluable, 
        prev.previous_evaluablefailures::bigint AS previous_evaluablefailures, 
        prev.previous_openqueries::bigint AS previous_openqueries,
        cur.current_subjectcount::bigint AS current_subjectcount, 
        prev.previous_subjectcount::bigint AS previous_subjectcount,
        cur.current_siteissueresolutiondays::bigint AS current_siteissueresolutiondays, 
        prev.previous_siteissueresolutiondays::bigint AS previous_siteissueresolutiondays,
        cur.current_closedissues::bigint AS current_closedissues, 
        prev.previous_closedissues::bigint AS previous_closedissues,
        cur.current_expectedrequiredfields::bigint AS current_expectedrequiredfields,
        cur.current_populatedrequiredfields::bigint AS current_populatedrequiredfields,
        cur.current_expectedprimaryendpointfields::bigint AS current_expectedprimaryendpointfields,
        cur.current_populatedprimaryendpointfields::bigint AS current_populatedprimaryendpointfields,
        cur.current_expectedrequiredsdvfields::bigint AS current_expectedrequiredsdvfields,
        cur.current_populatedsdvrequiredfields::bigint AS current_populatedsdvrequiredfields,
        cur.current_formdatacollecteddays::bigint AS current_formdatacollecteddays,
        cur.current_primaryendpointformdatacollecteddays::bigint AS current_primaryendpointformdatacollecteddays,
        cur.current_collectedformscounts::bigint AS current_collectedformscounts,
        cur.current_primaryendpointcollectedforms::bigint AS current_primaryendpointcollectedforms,
        cur.current_querycount::bigint AS current_querycount ,
        cur.current_queryopencount::bigint AS current_queryopencount ,
        prev.previous_expectedrequiredfields::bigint AS previous_expectedrequiredfields,
        prev.previous_populatedrequiredfields::bigint AS previous_populatedrequiredfields,
        prev.previous_expectedprimaryendpointfields::bigint AS previous_expectedprimaryendpointfields,
        prev.previous_populatedprimaryendpointfields::bigint AS previous_populatedprimaryendpointfields,
        prev.previous_expectedrequiredsdvfields::bigint AS previous_expectedrequiredsdvfields,
        prev.previous_populatedsdvrequiredfields::bigint AS previous_populatedsdvrequiredfields,
        prev.previous_formdatacollecteddays::bigint AS previous_formdatacollecteddays,
        prev.previous_primaryendpointformdatacollecteddays::bigint AS previous_primaryendpointformdatacollecteddays,
        prev.previous_collectedformscounts::bigint AS previous_collectedformscounts,
        prev.previous_primaryendpointcollectedforms::bigint AS previous_primaryendpointcollectedforms,
        prev.previous_querycount::bigint AS previous_querycount,
        prev.previous_queryopencount::bigint AS previous_queryopencount ,
        cur.current_subjectvisits::bigint AS current_subjectvisits,
        cur.current_subjectvisitsonschedule::bigint AS current_subjectvisitsonschedule,
        prev.previous_subjectvisits::bigint AS previous_subjectvisits,
        prev.previous_subjectvisitsonschedule::bigint AS previous_subjectvisitsonschedule,
        cur.current_queryresolutiondays::bigint AS current_queryresolutiondays,
        cur.current_plannedtrialvisits::bigint AS current_plannedtrialvisits,
        cur.current_missedtrialvisits::bigint AS current_missedtrialvisits,
        cur.current_latetrialvisits::bigint AS current_latetrialvisits,
        prev.previous_queryresolutiondays::bigint AS previous_queryresolutiondays,
        prev.previous_plannedtrialvisits::bigint AS previous_plannedtrialvisits,
        prev.previous_missedtrialvisits::bigint AS previous_missedtrialvisits,
        prev.previous_latetrialvisits::bigint AS previous_latetrialvisits,
        cur.current_openagedqueries::bigint AS current_openagedqueries,
        prev.previous_openagedqueries::bigint AS previous_openagedqueries,
        now()::timestamp without time zone AS comprehend_update_time  
FROM portfolio_metrics_current cur
LEFT JOIN portfolio_metrics_prev30days prev ON (cur.studyid = prev.studyid AND cur.siteid = prev.siteid);
